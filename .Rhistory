n<-length(tree$tip.label)
# reorder cladewise to assign tip positions
cw<-reorder(tree,"cladewise")
x<-vector(length=n+cw$Nnode)
x[cw$edge[cw$edge[,2]<=n,2]]<-0:(n-1)/(n-1)*360-180
# reorder pruningwise for post-order traversal
pw<-reorder(tree,"pruningwise")
nn<-unique(pw$edge[,1])
# compute horizontal position of each edge
for(i in 1:length(nn)){
xx<-x[pw$edge[which(pw$edge[,1]==nn[i]),2]]
x[nn[i]]<-mean(range(xx))
}
# compute start & end points of each edge
Y<-180-nodeHeights(cw)
# plot vertical edges
for(i in 1:nrow(Y))
lines(rep(x[cw$edge[i,2]],2),Y[i,],lwd=2,lend=2)
# plot horizontal relationships
for(i in 1:tree$Nnode+n)
lines(range(x[cw$edge[which(cw$edge[,1]==i),2]]),Y[which(cw$edge[,1]==i),1],lwd=2,lend=2)
# plot tip labels
for(i in 1:n)
text(x[i],Y[which(cw$edge[,2]==i),2],tree$tip.label[i],pos=4,offset=0.1,srt=-90)
coords<-coords[tree$tip.label,2:1]
points(coords,pch=16,cex=1,col="red")
for(i in 1:n) lines(c(x[i],coords[i,1]),c(Y[which(cw$edge[,2]==i),2],coords[i,2]),col="red",lty="dashed")
}
phylo.to.map(bird.orders,coords = mat, rotate = F)
rownames(mat) = bird.orders$tip.label
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = 110, to = 120, by = 0.001),23)),nrow = 23,ncol =2)
mat
phylo.to.map2(bird.orders,coords = mat, rotate = F)
phylo.to.map2(bird.orders,coords = mat, rotate = F)
phylo.to.map2(bird.orders,coords = mat)
mat
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat)
mat[tree$tip.label,2:1]
mat[bird.orders$tip.label,2:1]
mat[bird.orders$tip.label,1:2]
coords = mat[bird.orders$tip.label,1:2]
points(coords,pch=16,cex=1,col="red")
phylo.to.map(bird.orders,coords = mat, rotate = F)
rownames(mat) = bird.orders$tip.label
mat = matrix(c(sample(seq(from = 110, to = 120, by = 0.001),23),sample(seq(from = 30, to = 40, by = 0.001),23)),nrow = 23,ncol =2)
mat = matrix(c(sample(seq(from = -110, to = -120, by = 0.001),23),sample(seq(from = 30, to = 40, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat, rotate = F)
mat = matrix(c(sample(seq(from = -110, to = -120, by = 0.001),23),sample(seq(from = 30, to = 40, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat, rotate = F)
mat = matrix(c(sample(seq(from = -110, to = -120, by = 0.001),23),sample(seq(from = 30, to = 40, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = -110, to = -120, by = 0.001),23),sample(seq(from = 30, to = 40, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 110, to = 120, by = 0.001),23),sample(seq(from = 30, to = 40, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = 110, to = 120, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -110, to = -120, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = 0, to = 120, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = 120, to = 180, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -180, to = 0, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -160, to = -140, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -180, to = -140, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -120, to = -110, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -110, to = -120, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -110, to = -120, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat)
dev.new()
mat = matrix(c(sample(seq(from = 30, to = 40, by = 0.001),23),sample(seq(from = -110, to = -120, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = 114, to = 124, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = 114, to = 124, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -114, to = -124, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)= mat)
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map(bird.orders,coords = mat)
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat)
dev.new()
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
phylo.to.map2(bird.orders,coords = mat)
plot(pressure)
barplot(pressure)
barplot(pressure[,1])
library(ape)
library(phytools)
data(bird.orders)
#slightly better than default plot
phylo = plot.phylo(bird.orders, edge.width = 1, label.offset = 1,cex = 0.4, main = "Figure 1 (basic)")
dev.new()
plot.window(xlim = phylo$x.lim,ylim = phylo$y.lim, main = "fgi")
plot.new()
plot.window(xlim = phylo$x.lim,ylim = phylo$y.lim,main = "dd")
plot.new(main = "ff")
plot.window(xlim = phylo$x.lim,ylim = phylo$y.lim,main = "dd")
plot.new()
plot.window(xlim = phylo$x.lim,ylim = phylo$y.lim)
#three colors vector (red, blue, purple in hexadecimal, with last two digits as the transparency)
colors = c("#FF000060","#0000ff60","#551a8b60")
#add rectangles
rect(phylo$x.lim[1],0.5,phylo$x.lim[2],5.5,col = colors[1],border = F) #group 1
rect(phylo$x.lim[1],6.5,phylo$x.lim[2],12.5,col = colors[2], border = F) #group 2
rect(phylo$x.lim[1],13.5,phylo$x.lim[2],23.5, col = colors[3],border = F) #group 3
par(new = T)
plot.phylo(bird.orders, edge.width = 2, label.offset = 1, main = "Figure 4")
def.par <- par(no.readonly = TRUE)
#setup layout as a 3 X 3 matrix with 3 regions (region 1 for the phylo tree, 2 for a x/y scatter and 3 for legend)
m = matrix(c(2,1,1,2,1,1,3,1,1), 3, 3, byrow = TRUE)
par(def.par)
layout(m)
#save plot.phylo parameters, without plotting yet
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1, plot = F, cex = 1)
#REGION 1: add boxes based on the y axis coordinates, the x-axis coord. are based on the phylogeny, and your groups of interest
rect(phylo$x.lim[1],0.5,phylo$x.lim[2],5.5,col = colors[1],border = F) #group 1
rect(phylo$x.lim[1],6.5,phylo$x.lim[2],12.5,col = colors[2], border = F) #group 2
rect(phylo$x.lim[1],13.5,phylo$x.lim[2],23.5, col = colors[3],border = F) #group 3
#add phylogeny on top of rectangles
par(new = T)
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1, cex = 1, main = "Figure 5")
#add an x axis that looks decent
axis(1,at =seq(from = 0, to = round(phylo$x.lim[2]), by = 2),cex.axis = 0.5)
#Make the segment for Turniciformes dashed (find out the x/y coordinates of the segment, color it white, then dashed red on top)
segments(1,6,28,6,col = "white", lwd = 4, lty = 1)
segments(1,6,28,6,col = "black", lwd = 4, lty = 3)
#REGION 2: set up some wider margins for region # 2 of layout
par(mar = c(11,4,11,0))
#set up some fake data (say fake PCA data) for the 3 groups
pca = cbind(c(rnorm(6,mean=0,sd =1), rnorm(7,mean=2,sd =0.5),rnorm(10,mean=3,sd =0.5)),c(rnorm(6,mean=0,sd =1), rnorm(7,mean=0,sd =0.3),rnorm(10,mean=3,sd =0.2)))
rownames(pca) = bird.orders$tip.label
#colors scheme according to boxes in phylo tree (5 red,1 black, 6 blue, 1 black, 10 purple)
colors_according_to_tree = c(rep(colors[1],5),"black",rep(colors[2],6),"black",rep(colors[3],10))
#add another x/y scatter plot in region # 2 of layout
plot(pca,col = colors_according_to_tree,lwd =3,pch = 21, ylab = "random variable 1", xlab = "random variable 2", main = "Figure 6")
#REGION 3: reset margins
par(mar = c(5,4,4,3))
#empty plot in region 3
plot(1, type="n", xlab="", ylab="", xlim=c(0, 1), ylim=c(0, 1),xaxt="n",yaxt= "n", bty = "n")
#add a legend here
legend(0.1,1.5,legend = c("group1","group2","group3"),fill = colors,xpd = T, cex = 2)
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3, main = "Figure 8")
dev.new()
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3, main = "Figure 8")
?plot.contMap
?contMap
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3)
?title
title("seb")
dev.new()
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3)
title("seb")
library(ape)
library(phytools)
data(bird.orders)
#slightly better than default plot
phylo = plot.phylo(bird.orders, edge.width = 1, label.offset = 1,cex = 0.4, main = "Figure 1 (basic)")
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3)
title("main title")
?par
dev.new()
par(mar = c(5,4,8,2))
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3)
title("Figure 6 (adding branch colors according to trait 1)")
par(mar = c(5,4,8,2))
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
q(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3)
?plot.contMap
?title
par(mar = c(5,4,8,2))
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3)
#must add a title manually to plot.contMap option
title("Figure 6 (adding branch colors according to trait 1)",xpd = T)
par(mar = c(5,4,8,2))
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = fan)
#must add a title manually to plot.contMap option
title("Figure 6 (adding branch colors according to trait 1)",xpd = T)
par(mar = c(5,4,8,2))
trait1 = c(sample(c(0:25),6),c(sample(25:75,6)),sample(c(75:100),11))
names(trait1) = bird.orders$tip.label
#use contMap from phytools
tree.trait <- contMap(bird.orders, trait1, plot = F)
tree.trait<-setMap(tree.trait, colors=c("darkgreen","darkorange","blue"))
#carefull, we now plot using the plotting tool from phytools
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan")
#must add a title manually to plot.contMap option
title("Figure 6 (adding branch colors according to trait 1)",xpd = T)
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan")
dev.off()
par(mar =c (5,4,8,2))
dev.new()
par(mar =c (5,4,8,2))
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan")
par(new = T)
layout(m)
m = matrix(c(2,1,1,2,1,1,3,1,1), 3, 3, byrow = TRUE)
layout(m)
#add phylogeny on top of rectangles
par(new = T)
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan")
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan")
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan")
?plot.contMap
plot.ContMap
plot.contMap
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan", mar = c(2,2,1,1))
dev.off()
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan", mar = c(5,4,8,2))
plot.contMap(tree.trait,type = "phylogram",legend = 0.4*max(nodeHeights(bird.orders)), fsize = c(0.9, 0.7), lwd=3,type = "fan", mar = c(5,4,4,2))
m = matrix(c(2,1,1,2,1,1,3,1,1), 3, 3, byrow = TRUE)
layout(m)
#save plot.phylo parameters, without plotting yet
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1, plot = F, cex = 1)
#REGION 1: add boxes based on the y axis coordinates, the x-axis coord. are based on the phylogeny, and your groups of interest
rect(phylo$x.lim[1],0.5,phylo$x.lim[2],5.5,col = colors[1],border = F) #group 1
rect(phylo$x.lim[1],6.5,phylo$x.lim[2],12.5,col = colors[2], border = F) #group 2
rect(phylo$x.lim[1],13.5,phylo$x.lim[2],23.5, col = colors[3],border = F) #group 3
#add phylogeny on top of rectangles
par(new = T)
phylo = plot.phylo(bird.orders, edge.width = 2, label.offset = 1, cex = 1, main = "Figure 5 (3 plots in layout)")
#add an x axis that looks decent
axis(1,at =seq(from = 0, to = round(phylo$x.lim[2]), by = 2),cex.axis = 0.5)
#Make the segment for Turniciformes dashed (find out the x/y coordinates of the segment, color it white, then dashed red on top)
segments(1,6,28,6,col = "white", lwd = 4, lty = 1)
segments(1,6,28,6,col = "black", lwd = 4, lty = 3)
#REGION 2: set up some wider margins for region # 2 of layout
par(mar = c(11,4,11,0))
#set up some fake data (say fake PCA data) for the 3 groups
pca = cbind(c(rnorm(6,mean=0,sd =1), rnorm(7,mean=2,sd =0.5),rnorm(10,mean=3,sd =0.5)),c(rnorm(6,mean=0,sd =1), rnorm(7,mean=0,sd =0.3),rnorm(10,mean=3,sd =0.2)))
rownames(pca) = bird.orders$tip.label
#colors scheme according to boxes in phylo tree (5 red,1 black, 6 blue, 1 black, 10 purple)
colors_according_to_tree = c(rep(colors[1],5),"black",rep(colors[2],6),"black",rep(colors[3],10))
#add another x/y scatter plot in region # 2 of layout
plot(pca,col = colors_according_to_tree,lwd =3,pch = 21, ylab = "random variable 1", xlab = "random variable 2")
#REGION 3: reset margins
par(mar = c(3,4,3,2))
#empty plot in region 3
plot(1, type="n", xlab="", ylab="", xlim=c(0, 1), ylim=c(0, 1),xaxt="n",yaxt= "n", bty = "n")
#add a legend here
legend(0.1,1.5,legend = c("group1","group2","group3"),fill = colors,xpd = T, cex = 2,xpd = T)
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
dev.off()
dev.new()
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
dev.new()
mat = matrix(c(sample(seq(from = 32, to = 42, by = 0.001),23),sample(seq(from = -124, to = -114, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -104, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
?phylo.to.map
dev.new()
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
```
dev.off()
dev.off()
dev.off()
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
```
dev.new()
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
#matrix of GPS coordinates
par(2,4,2,2)
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
#must add a title manually to plot.contMap option
title("Figure 8 (world map)")
#matrix of GPS coordinates
par(2,4,2,2)
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapptitle("Figure 8 (world map)")
#must add a title manually to plot.contMap option
title("Figure 8 (world mdaw)")
par(1,1,1,1)
mat = matrix(c(sample(seq(from = 32, to = 60, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat)
title("Figure 8 (world map)")
phylo.to.map(bird.orders,coords = mat,split = c(5,5))
phylo.to.map(bird.orders,coords = mat,split = c(1,1))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,0.1))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,1))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,0))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,2))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,0.001))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,10))
phylo.to.map(bird.orders,coords = mat,split = c(0.1,100))
phylo.to.map(bird.orders,coords = mat,split = c(0.1))
?phylo.to.map
phylo.to.map
phylo.to.map(bird.orders,coords = mat,database = "california"
)
phylo.to.map(bird.orders,coords = mat,database = "usa")
par(1,1,1,1)
mat = matrix(c(sample(seq(from = 32, to = 40, by = 0.001),23),sample(seq(from = -124, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat, database = "usa")
mat = matrix(c(sample(seq(from = 32, to = 45, by = 0.001),23),sample(seq(from = -120, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat, database = "usa")
title("Figure 8 (world map)")
?title
title("Figure 8 (world map)", line = -1)
title("Figure 8 (world map)", line = -5)
par(1,1,1,1)
mat = matrix(c(sample(seq(from = 32, to = 45, by = 0.001),23),sample(seq(from = -120, to = -84, by = 0.001),23)),nrow = 23,ncol =2)
rownames(mat) = bird.orders$tip.label
###world mapping function
phylo.to.map(bird.orders,coords = mat, database = "usa")
#must add a title manually to plot.contMap option
title("Figure 8 (world map)",line = -3)
?invisible
phylo.to.map2 =
function (tree, coords, rotate = TRUE, ...)
{
if (!inherits(tree, "phylo"))
stop("tree should be an object of class \"phylo\".")
if (hasArg(database))
database <- list(...)$database
else database <- "world"
if (hasArg(regions))
regions <- list(...)$regions
else regions <- "."
if (hasArg(plot))
plot <- list(...)$plot
else plot <- TRUE
if (hasArg(xlim))
xlim <- list(...)$xlim
else xlim <- c(-180, 180)
if (hasArg(ylim))
ylim <- list(...)$ylim
else ylim <- c(-90, 90)
map <- map(database, regions, xlim = xlim, ylim = ylim, plot = FALSE,
fill = TRUE, resolution = 0)
if (hasArg(type))
type <- list(...)$type
else type <- "phylogram"
if (hasArg(direction))
direction <- list(...)$direction
else direction <- "downwards"
if (is.data.frame(coords))
coords <- as.matrix(coords)
if (rotate && type == "phylogram")
tree <- minRotate(tree, coords[, if (direction == "rightwards")
1
else 2])
x <- list(tree = tree, map = map, coords = coords)
class(x) <- "phylo.to.map"
if (plot)
plot.phylo.to.map(x, ...)
}
<bytecode: 0x11169dc08>
<environment: namespace:phytools>
phylo.to.map2 =
function (tree, coords, rotate = TRUE, ...)
{
if (!inherits(tree, "phylo"))
stop("tree should be an object of class \"phylo\".")
if (hasArg(database))
database <- list(...)$database
else database <- "world"
if (hasArg(regions))
regions <- list(...)$regions
else regions <- "."
if (hasArg(plot))
plot <- list(...)$plot
else plot <- TRUE
if (hasArg(xlim))
xlim <- list(...)$xlim
else xlim <- c(-180, 180)
if (hasArg(ylim))
ylim <- list(...)$ylim
else ylim <- c(-90, 90)
map <- map(database, regions, xlim = xlim, ylim = ylim, plot = FALSE,
fill = TRUE, resolution = 0)
if (hasArg(type))
type <- list(...)$type
else type <- "phylogram"
if (hasArg(direction))
direction <- list(...)$direction
else direction <- "downwards"
if (is.data.frame(coords))
coords <- as.matrix(coords)
if (rotate && type == "phylogram")
tree <- minRotate(tree, coords[, if (direction == "rightwards")
1
else 2])
x <- list(tree = tree, map = map, coords = coords)
class(x) <- "phylo.to.map"
if (plot)
plot.phylo.to.map(x, ...)
}
phylo.to.map2(bird.orders,coords = mat, database = "usa")
